{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D E L L\\\\NetMedsTask\\\\src\\\\components\\\\Pages\\\\Home\\\\Home.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Alert, Button, Col, Collapse, Form, ListGroup, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTemplate } from '../../../Redux/rootForm/rootFormActions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faEdit, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\nfunction Home() {\n  const listCss = {\n    cursor: 'pointer',\n    listStyle: 'none',\n    margin: '3px',\n    padding: '10px',\n    border: '1px dashed #ddd'\n  };\n  const formElements = ['Text', 'Number', 'Email', 'CheckBox', 'TextArea', 'Date'];\n  const [formFields, setFormFields] = useState([]);\n  const [name, setName] = useState('');\n  const [enableControls, setEnableControls] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const dispatch = useDispatch();\n  const ref = useRef(null);\n  const [formTemplate, setFormTemplate] = useState([]);\n  const [global, setGlobal] = useState([]);\n  const product = useSelector(state => state);\n  const [inUpdateView, setInUpdateView] = useState(false);\n  const [isEditable, setisEditable] = useState(false);\n  const [ind, setInd] = useState('');\n  var [labelObj, setLabelObj] = useState({});\n\n  const getSelected = (value, index) => {\n    if (inUpdateView) return;\n\n    if (name !== '') {\n      let item = value;\n      let type = \"\";\n      let label = \"\";\n      let tempArr = formFields && formFields.length ? [...formFields] : [];\n      let field = {\n        type: \"\",\n        label: \"\"\n      };\n\n      switch (item) {\n        case 'Text':\n          type = \"text\";\n          label = \"Text\";\n          break;\n\n        case 'Number':\n          type = \"number\";\n          label = \"Number\";\n          break;\n\n        case 'Email':\n          type = \"email\";\n          label = \"Email\";\n          break;\n\n        case 'CheckBox':\n          type = \"checkbox\";\n          label = \"Check\";\n          break;\n\n        case 'TextArea':\n          type = \"textArea\";\n          label = \"Text Area\";\n          break;\n\n        case 'Date':\n          type = \"date\";\n          label = \"Select Date\";\n          break;\n      }\n\n      field.type = type;\n      field.label = label + '_' + tempArr.length;\n      field.displayLabel = label;\n      tempArr.push(field);\n      setFormFields(tempArr);\n      setGlobal(tempArr);\n      setShowAlert(false);\n    } else {\n      setShowAlert(true);\n    }\n  };\n\n  function enableInput() {\n    if (formFields && formFields.length) {\n      setFormFields([]);\n      setName('');\n    }\n\n    setInUpdateView(false);\n    setEnableControls(true);\n  }\n\n  function nameChange(e) {\n    setName(e.target.value);\n  }\n\n  function saveForm() {\n    if (global && global.length) {\n      setShowAlert(false);\n      let tempObj = {};\n      tempObj['formFields'] = global;\n      tempObj['formName'] = name;\n      let tempArr = formTemplate && formTemplate.length ? [...formTemplate] : [];\n      tempArr.push(name);\n      setFormTemplate(tempArr);\n      dispatch(createTemplate(tempObj));\n      setName('');\n      setFormFields([]);\n      setEnableControls(false);\n    } else {\n      setShowAlert(true);\n    }\n  }\n\n  function deleteFormElement(item, index) {\n    let tempFields = [...formFields];\n    tempFields.splice(index, 1);\n    setFormFields(tempFields);\n    setGlobal(tempFields);\n  }\n\n  function displaySelectedTemplate(item, index) {\n    let tempForm = product.form.forms[item]['metaData'];\n    setEnableControls(true);\n    setInUpdateView(true);\n    setName(item);\n    setFormFields(tempForm);\n  }\n\n  function editSelectedLable(props) {\n    setInd(props === null || props === void 0 ? void 0 : props.indexing);\n    setisEditable(!isEditable);\n  }\n\n  const modifyLabelName = (event, props) => {\n    var _props$data, _props$data2, _props$data3;\n\n    let tempObj = {};\n    tempObj['type'] = props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.data['type'];\n    tempObj['displayLabel'] = event.target.value;\n    tempObj['label'] = event.target.value + '_' + (props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.indexing);\n    tempObj['index'] = props === null || props === void 0 ? void 0 : (_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.indexing;\n    labelObj = tempObj;\n  };\n\n  function renameLabels() {\n    var _labelObj;\n\n    let tempArr = formFields && formFields.length ? [...formFields] : [];\n    tempArr[(_labelObj = labelObj) === null || _labelObj === void 0 ? void 0 : _labelObj.index] = labelObj;\n    setFormFields(tempArr);\n    setGlobal(tempArr);\n    setisEditable(!isEditable);\n  }\n\n  useEffect(() => {\n    if (product && product.form && product.form.forms) {\n      let tempObj = Object.keys(product.form.forms);\n      setFormTemplate(tempObj);\n    }\n  }, [product]);\n\n  function EmailTag(props) {\n    var _props$data4;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : _props$data4.displayLabel), ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        display: inUpdateView ? 'none' : ''\n      },\n      icon: isEditable && props.indexing === ind ? faCheckCircle : faEdit,\n      onClick: () => {\n        isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props);\n      },\n      \"aria-controls\": \"example-collapse-text\",\n      \"aria-expanded\": isEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 74\n      }\n    }), props.indexing === ind && /*#__PURE__*/React.createElement(EditLabel, {\n      data: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"We'll never share your email with anyone else.\"));\n  }\n\n  function TextTag(props) {\n    var _props$data5;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data5 = props.data) === null || _props$data5 === void 0 ? void 0 : _props$data5.displayLabel), ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        display: inUpdateView ? 'none' : ''\n      },\n      icon: isEditable && props.indexing === ind ? faCheckCircle : faEdit,\n      onClick: () => {\n        isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props);\n      },\n      \"aria-controls\": \"example-collapse-text\",\n      \"aria-expanded\": isEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 74\n      }\n    }), props.indexing === ind && /*#__PURE__*/React.createElement(EditLabel, {\n      data: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Text\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function NumberTag(props) {\n    var _props$data6;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data6 = props.data) === null || _props$data6 === void 0 ? void 0 : _props$data6.displayLabel), ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        display: inUpdateView ? 'none' : ''\n      },\n      icon: isEditable && props.indexing === ind ? faCheckCircle : faEdit,\n      onClick: () => {\n        isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props);\n      },\n      \"aria-controls\": \"example-collapse-text\",\n      \"aria-expanded\": isEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 75\n      }\n    }), props.indexing === ind && /*#__PURE__*/React.createElement(EditLabel, {\n      data: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: \"12345....\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function CheckBox(props) {\n    var _props$data7;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data7 = props.data) === null || _props$data7 === void 0 ? void 0 : _props$data7.displayLabel), ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        display: inUpdateView ? 'none' : ''\n      },\n      icon: isEditable && props.indexing === ind ? faCheckCircle : faEdit,\n      onClick: () => {\n        isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props);\n      },\n      \"aria-controls\": \"example-collapse-text\",\n      \"aria-expanded\": isEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 74\n      }\n    }), props.indexing === ind && /*#__PURE__*/React.createElement(EditLabel, {\n      data: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check me out\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function TextArea(props) {\n    var _props$data8;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicTextArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data8 = props.data) === null || _props$data8 === void 0 ? void 0 : _props$data8.displayLabel), ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        display: inUpdateView ? 'none' : ''\n      },\n      icon: isEditable && props.indexing === ind ? faCheckCircle : faEdit,\n      onClick: () => {\n        isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props);\n      },\n      \"aria-controls\": \"example-collapse-text\",\n      \"aria-expanded\": isEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 74\n      }\n    }), props.indexing === ind && /*#__PURE__*/React.createElement(EditLabel, {\n      data: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      rows: \"3\",\n      col: \"3\",\n      id: \"comment\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function DateArea(props) {\n    var _props$data9;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data9 = props.data) === null || _props$data9 === void 0 ? void 0 : _props$data9.displayLabel), ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        display: inUpdateView ? 'none' : ''\n      },\n      icon: isEditable && props.indexing === ind ? faCheckCircle : faEdit,\n      onClick: () => {\n        isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props);\n      },\n      \"aria-controls\": \"example-collapse-text\",\n      \"aria-expanded\": isEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 74\n      }\n    }), props.indexing === ind && /*#__PURE__*/React.createElement(EditLabel, {\n      data: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"date\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function ShowAlert() {\n    return /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 32\n      }\n    }, name === '' ? 'Cannot add form field without a name' : 'Please add atleast one form element')));\n  }\n\n  function EditLabel(props) {\n    return /*#__PURE__*/React.createElement(Collapse, {\n      in: isEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"example-collapse-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter Label Name\",\n      size: \"sm\",\n      type: \"text\",\n      onChange: e => modifyLabelName(e, props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, showAlert && /*#__PURE__*/React.createElement(ShowAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"border-right left-section col-md-3 py-2 px-4\",\n    style: {\n      height: '100vh',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }, \"Created Forms\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: enableInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, \" Create New Form\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }), formTemplate.map((item, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    style: listCss,\n    onClick: () => displaySelectedTemplate(item, index),\n    action: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, item, \" \")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    className: \"border-right py-2 px-4\",\n    style: {\n      height: '100vh',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, inUpdateView ? 'Created Form Template' : 'Create New Form'), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: enableControls ? \"block\" : \"none\"\n    },\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"name.....\",\n    value: name || '',\n    type: \"text\",\n    onChange: nameChange,\n    readOnly: inUpdateView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 41\n    }\n  })), !inUpdateView && /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"sm\",\n    onClick: saveForm,\n    disabled: !name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 55\n    }\n  }, \"Save Form\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }), formFields && formFields.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 45\n      }\n    }, item.type === 'email' && /*#__PURE__*/React.createElement(EmailTag, {\n      data: item,\n      indexing: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 75\n      }\n    }), item.type === 'text' && /*#__PURE__*/React.createElement(TextTag, {\n      data: item,\n      indexing: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 74\n      }\n    }), item.type === 'number' && /*#__PURE__*/React.createElement(NumberTag, {\n      data: item,\n      indexing: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 76\n      }\n    }), item.type === 'checkbox' && /*#__PURE__*/React.createElement(CheckBox, {\n      data: item,\n      indexing: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 78\n      }\n    }), item.type === 'textArea' && /*#__PURE__*/React.createElement(TextArea, {\n      data: item,\n      indexing: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 78\n      }\n    }), item.type === 'date' && /*#__PURE__*/React.createElement(DateArea, {\n      data: item,\n      indexing: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 74\n      }\n    })), !inUpdateView && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        \"marginTop\": '6%',\n        \"cursor\": \"pointer\"\n      },\n      onClick: () => deleteFormElement(item, index),\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 63\n      }\n    }))));\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 3,\n    className: \"py-2 px-2 section-three\",\n    style: {\n      height: '50em',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, \"Form Elements\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }, formElements.map((item, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    style: listCss,\n    onClick: () => getSelected(item, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 37\n    }\n  }, item))))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/D E L L/NetMedsTask/src/components/Pages/Home/Home.js"],"names":["React","useEffect","useRef","useState","Alert","Button","Col","Collapse","Form","ListGroup","Row","useDispatch","useSelector","createTemplate","FontAwesomeIcon","faCheckCircle","faEdit","faTrashAlt","faPlusCircle","Home","listCss","cursor","listStyle","margin","padding","border","formElements","formFields","setFormFields","name","setName","enableControls","setEnableControls","showAlert","setShowAlert","dispatch","ref","formTemplate","setFormTemplate","global","setGlobal","product","state","inUpdateView","setInUpdateView","isEditable","setisEditable","ind","setInd","labelObj","setLabelObj","getSelected","value","index","item","type","label","tempArr","length","field","displayLabel","push","enableInput","nameChange","e","target","saveForm","tempObj","deleteFormElement","tempFields","splice","displaySelectedTemplate","tempForm","form","forms","editSelectedLable","props","indexing","modifyLabelName","event","data","renameLabels","Object","keys","EmailTag","display","TextTag","NumberTag","CheckBox","TextArea","DateArea","ShowAlert","EditLabel","height","overflowY","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Alert, Button, Col, Collapse, Form, ListGroup, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTemplate } from '../../../Redux/rootForm/rootFormActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faEdit, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction Home() {\n    const listCss = { cursor: 'pointer', listStyle: 'none', margin: '3px', padding: '10px', border: '1px dashed #ddd' }\n    const formElements = ['Text', 'Number', 'Email', 'CheckBox', 'TextArea', 'Date']\n    const [formFields, setFormFields] = useState([]);\n    const [name, setName] = useState('');\n    const [enableControls, setEnableControls] = useState(false)\n    const [showAlert, setShowAlert] = useState(false);\n    const dispatch = useDispatch();\n    const ref = useRef(null);\n    const [formTemplate, setFormTemplate] = useState([]);\n    const [global, setGlobal] = useState([]);\n    const product = useSelector(state => state)\n    const [inUpdateView, setInUpdateView] = useState(false);\n    const [isEditable, setisEditable] = useState(false);\n    const [ind, setInd] = useState('');\n    var [labelObj, setLabelObj] = useState({});\n\n    const getSelected = (value, index) => {\n        if (inUpdateView) return\n        if (name !== '') {\n            let item = value;\n            let type = \"\";\n            let label = \"\";\n            let tempArr = formFields && formFields.length ? [...formFields] : [];\n            let field = {\n                type: \"\",\n                label: \"\"\n            }\n            switch (item) {\n                case 'Text':\n                    type = \"text\"\n                    label = \"Text\"\n                    break\n                case 'Number':\n                    type = \"number\"\n                    label = \"Number\"\n                    break\n                case 'Email':\n                    type = \"email\"\n                    label = \"Email\"\n                    break\n                case 'CheckBox':\n                    type = \"checkbox\"\n                    label = \"Check\"\n                    break\n                case 'TextArea':\n                    type = \"textArea\"\n                    label = \"Text Area\"\n                    break\n                case 'Date':\n                    type = \"date\"\n                    label = \"Select Date\"\n                    break\n            }\n            field.type = type;\n            field.label = label + '_' + tempArr.length\n            field.displayLabel = label\n            tempArr.push(field);\n            setFormFields(tempArr);\n            setGlobal(tempArr);\n            setShowAlert(false);\n        } else {\n            setShowAlert(true);\n        }\n    }\n\n    function enableInput() {\n        if (formFields && formFields.length) {\n            setFormFields([]);\n            setName('');\n        }\n        setInUpdateView(false);\n        setEnableControls(true);\n    }\n\n    function nameChange(e) {\n        setName(e.target.value);\n    }\n\n    function saveForm() {\n        if (global && global.length) {\n            setShowAlert(false);\n            let tempObj = {}\n            tempObj['formFields'] = global;\n            tempObj['formName'] = name;\n            let tempArr = formTemplate && formTemplate.length ? [...formTemplate] : [];\n            tempArr.push(name);\n            setFormTemplate(tempArr);\n            dispatch(createTemplate(tempObj));\n            setName('');\n            setFormFields([]);\n            setEnableControls(false);\n        } else {\n            setShowAlert(true);\n        }\n    }\n\n    function deleteFormElement(item, index) {\n        let tempFields = [...formFields];\n        tempFields.splice(index, 1);\n        setFormFields(tempFields);\n        setGlobal(tempFields)\n    }\n\n    function displaySelectedTemplate(item, index) {\n        let tempForm = product.form.forms[item]['metaData'];\n        setEnableControls(true);\n        setInUpdateView(true);\n        setName(item);\n        setFormFields(tempForm)\n    }\n\n    function editSelectedLable(props) {\n        setInd(props?.indexing)\n        setisEditable(!isEditable);\n    }\n\n    const modifyLabelName = (event, props) => {\n        let tempObj = {};\n        tempObj['type'] = props?.data?.data['type'];\n        tempObj['displayLabel'] = event.target.value;\n        tempObj['label'] = event.target.value + '_' + props?.data?.indexing;\n        tempObj['index'] = props?.data?.indexing;\n        labelObj = tempObj;\n    }\n\n    function renameLabels() {\n        let tempArr = formFields && formFields.length ? [...formFields] : [];\n        tempArr[labelObj?.index] = labelObj;\n        setFormFields(tempArr);\n        setGlobal(tempArr);\n        setisEditable(!isEditable);\n    }\n\n    useEffect(() => {\n        if (product && product.form && product.form.forms) {\n            let tempObj = Object.keys(product.form.forms);\n            setFormTemplate(tempObj);\n        }\n    }, [product]);\n\n    function EmailTag(props) {\n        return (\n            < Form.Group controlId=\"formBasicEmail\" >\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>{' '}<FontAwesomeIcon style={{ display: inUpdateView ? 'none' : '' }} icon={isEditable && props.indexing === ind ? faCheckCircle : faEdit} onClick={() => { isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props) }} aria-controls=\"example-collapse-text\" aria-expanded={isEditable} />\n                {props.indexing === ind && <EditLabel data={props} />}\n                <Form.Control type=\"email\" placeholder=\"Enter email\" readOnly />\n                <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n            </Form.Group >\n        )\n    }\n    function TextTag(props) {\n        return (\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>{' '}<FontAwesomeIcon style={{ display: inUpdateView ? 'none' : '' }} icon={isEditable && props.indexing === ind ? faCheckCircle : faEdit} onClick={() => { isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props) }} aria-controls=\"example-collapse-text\" aria-expanded={isEditable} />\n                {props.indexing === ind && <EditLabel data={props} />}\n                <Form.Control type=\"text\" placeholder=\"Enter Text\" readOnly />\n            </Form.Group>\n        )\n    }\n    function NumberTag(props) {\n        return (\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label >{props?.data?.displayLabel}</Form.Label>{' '}<FontAwesomeIcon style={{ display: inUpdateView ? 'none' : '' }} icon={isEditable && props.indexing === ind ? faCheckCircle : faEdit} onClick={() => { isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props) }} aria-controls=\"example-collapse-text\" aria-expanded={isEditable} />\n                {props.indexing === ind && <EditLabel data={props} />}\n                <Form.Control type=\"number\" placeholder=\"12345....\" readOnly />\n            </Form.Group>\n        )\n    }\n    function CheckBox(props) {\n        return (\n            <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>{' '}<FontAwesomeIcon style={{ display: inUpdateView ? 'none' : '' }} icon={isEditable && props.indexing === ind ? faCheckCircle : faEdit} onClick={() => { isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props) }} aria-controls=\"example-collapse-text\" aria-expanded={isEditable} />\n                {props.indexing === ind && <EditLabel data={props} />}\n                <Form.Check type=\"checkbox\" label=\"Check me out\" disabled />\n            </Form.Group>\n        )\n    }\n    function TextArea(props) {\n        return (\n            <Form.Group controlId=\"formBasicTextArea\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>{' '}<FontAwesomeIcon style={{ display: inUpdateView ? 'none' : '' }} icon={isEditable && props.indexing === ind ? faCheckCircle : faEdit} onClick={() => { isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props) }} aria-controls=\"example-collapse-text\" aria-expanded={isEditable} />\n                {props.indexing === ind && <EditLabel data={props} />}\n                <textarea className=\"form-control\" rows=\"3\" col=\"3\" id=\"comment\" disabled></textarea>\n            </Form.Group>\n        )\n    }\n    function DateArea(props) {\n        return (\n            <Form.Group controlId=\"formBasicDate\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>{' '}<FontAwesomeIcon style={{ display: inUpdateView ? 'none' : '' }} icon={isEditable && props.indexing === ind ? faCheckCircle : faEdit} onClick={() => { isEditable && props.indexing === ind ? renameLabels() : editSelectedLable(props) }} aria-controls=\"example-collapse-text\" aria-expanded={isEditable} />\n                {props.indexing === ind && <EditLabel data={props} />}\n                <Form.Check type=\"date\" disabled />\n            </Form.Group>\n        )\n    }\n\n    function ShowAlert() {\n        return (\n            <Alert variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n                <Alert.Heading><h6>{name === '' ? 'Cannot add form field without a name' : 'Please add atleast one form element'}</h6></Alert.Heading>\n            </Alert>\n        )\n    }\n\n    function EditLabel(props) {\n        return (\n            <Collapse in={isEditable} >\n                <div id=\"example-collapse-text\">\n                    <Form.Control placeholder=\"Enter Label Name\" size=\"sm\" type=\"text\" onChange={(e) => modifyLabelName(e, props)} />\n                </div>\n            </Collapse>\n        )\n    }\n\n    return (\n        <>\n            <div>\n                {showAlert && <ShowAlert />}\n                <Row className=\"m-0\">\n                    <Col  className=\"border-right left-section col-md-3 py-2 px-4\" style={{ height: '100vh', overflowY: 'auto' }}>\n                        <h6  >Created Forms</h6>\n                        <div className=\"d-flex justify-content-end\">\n                            <button type=\"button\" onClick={enableInput} > Create New Form</button>\n                        </div>\n                        <div className=\"mt-2\"></div>\n                        {formTemplate.map((item, index) => (\n                            <ListGroup.Item key={index} style={listCss} onClick={() => displaySelectedTemplate(item, index)} action>{item} </ListGroup.Item>\n                        ))}\n                        <br />\n                    </Col>\n                    <Col xs={12} md={6} className=\"border-right py-2 px-4\"  style={{ height: '100vh', overflowY: 'auto' }}>\n                        <h6 >{inUpdateView ? 'Created Form Template' : 'Create New Form'}</h6>\n                        <div style={{ display: enableControls ? \"block\" : \"none\" }} ref={ref}>\n                            <Form>\n                                <Form.Row>\n                                    <Col>\n                                        <Form.Control placeholder=\"name.....\" value={name || ''} type=\"text\" onChange={nameChange} readOnly={inUpdateView} />\n                                    </Col>\n                                    {!inUpdateView && <Button variant=\"primary\" size=\"sm\" onClick={saveForm} disabled={!name}>\n                                        Save Form</Button>\n                                    }\n                                </Form.Row>\n                            </Form>\n                            <br />\n                            {formFields && formFields.map((item, index) => {\n                                return (<div key={index}>\n                                    <Form>\n                                        <Form.Row>\n                                            <Col>\n                                                {item.type === 'email' && <EmailTag data={item} indexing={index} />}\n                                                {item.type === 'text' && <TextTag data={item} indexing={index} />}\n                                                {item.type === 'number' && <NumberTag data={item} indexing={index} />}\n                                                {item.type === 'checkbox' && <CheckBox data={item} indexing={index} />}\n                                                {item.type === 'textArea' && <TextArea data={item} indexing={index} />}\n                                                {item.type === 'date' && <DateArea data={item} indexing={index} />}\n                                            </Col>\n                                            {!inUpdateView && <FontAwesomeIcon style={{ \"marginTop\": '6%', \"cursor\": \"pointer\" }} onClick={() => deleteFormElement(item, index)} icon={faTrashAlt} />}\n                                        </Form.Row>\n                                    </Form>\n                                </div>)\n                            })}\n                        </div>\n                    </Col>\n                    <Col xs={12} md={3} className=\"py-2 px-2 section-three\" style={{ height: '50em', overflowY: 'auto' }}>\n                        <h6>Form Elements</h6>\n                        <div>\n                            <ListGroup>\n                                {formElements.map((item, index) => (\n                                    <ListGroup.Item key={index} style={listCss} onClick={() => getSelected(item, index)}>{item}</ListGroup.Item>\n                                ))}\n                            </ListGroup>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}
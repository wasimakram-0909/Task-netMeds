{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D E L L\\\\NetMedsTask\\\\src\\\\components\\\\Pages\\\\Forms\\\\Forms.js\";\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Col, Form, ListGroup, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createRecord, updateRecords } from '../../../Redux/rootForm/rootFormActions';\n\nfunction Forms(props) {\n  var _props$location, _props$location$state, _formrender$metaData;\n\n  const listCss = {\n    cursor: 'pointer',\n    listStyle: 'none',\n    margin: '3px',\n    padding: '10px',\n    border: '1px dashed #ddd'\n  };\n  const [formList, setFormList] = useState([]);\n  var [formrender, setFormRender] = useState([]);\n  const [selected, setSelected] = useState('');\n  const [showButton, setShowButton] = useState(false);\n  const dispatch = useDispatch();\n  const forms = useSelector(state => state.form.forms);\n  const [prevId, setPrevId] = useState((_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.id);\n  useEffect(() => {\n    let tempArr = Object.keys(forms);\n    setFormList(tempArr);\n\n    if (prevId && prevId !== undefined) {\n      var _prevId$id;\n\n      let tempVal = prevId === null || prevId === void 0 ? void 0 : (_prevId$id = prevId.id) === null || _prevId$id === void 0 ? void 0 : _prevId$id.split('_')[1];\n      getSelectedForm(tempVal);\n    } else if (prevId === undefined) {\n      setPrevId('');\n      setFormRender([]);\n    }\n  }, [forms]);\n\n  function getSelectedForm(value) {\n    setShowButton(true);\n    let temp = JSON.parse(JSON.stringify(forms[value]));\n\n    if (prevId && temp && temp['metaData'].length) {\n      for (let k = 0; k < temp['metaData'].length; k++) {\n        let field = temp['metaData'][k];\n        field['value'] = prevId[field['label']];\n      }\n    }\n\n    setSelected(value);\n    setFormRender(temp);\n  }\n\n  function saveRecord() {\n    let tempRecord = {};\n    let uniqueId = Date.now().toString(36) + Math.random().toString(36).substring(2);\n\n    for (let i = 0; i < formrender.metaData.length; i++) {\n      let field = formrender.metaData[i];\n      tempRecord[field['label']] = field['value'];\n    }\n\n    tempRecord['templateType'] = selected;\n    tempRecord['id'] = uniqueId + '_' + selected;\n    dispatch(createRecord(tempRecord));\n\n    for (let i = 0; i < formrender.metaData.length; i++) {\n      formrender.metaData[i]['value'] = '';\n    }\n\n    setFormRender([]);\n    setShowButton(false);\n  }\n\n  function updateRecord() {\n    let tempObj = {};\n\n    for (let i = 0; i < formrender.metaData.length; i++) {\n      let field = formrender.metaData[i];\n      tempObj[field['label']] = field['value'];\n    }\n\n    tempObj['templateType'] = selected;\n    tempObj['id'] = prevId.id;\n    dispatch(updateRecords(tempObj));\n\n    for (let i = 0; i < formrender.metaData.length; i++) {\n      formrender.metaData[i]['value'] = '';\n    }\n\n    setPrevId('');\n    setFormRender([]);\n    setShowButton(false);\n  }\n\n  function getValues(event, index) {\n    let value = event;\n    formrender.metaData[index]['value'] = value;\n  }\n\n  function EmailTag(props) {\n    var _props$data, _props$data2;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.displayLabel), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      defaultValue: (props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.value) || '',\n      onChange: e => getValues(e.target.value, props.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"We'll never share your email with anyone else.\"));\n  }\n\n  function TextTag(props) {\n    var _props$data3, _props$data4;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.displayLabel), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Text\",\n      defaultValue: (props === null || props === void 0 ? void 0 : (_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : _props$data4.value) || '',\n      onChange: e => getValues(e.target.value, props.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function NumberTag(props) {\n    var _props$data5, _props$data6;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data5 = props.data) === null || _props$data5 === void 0 ? void 0 : _props$data5.displayLabel), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: \"12345....\",\n      defaultValue: (props === null || props === void 0 ? void 0 : (_props$data6 = props.data) === null || _props$data6 === void 0 ? void 0 : _props$data6.value) || '',\n      onChange: e => getValues(e.target.value, props.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function CheckBox(props) {\n    var _props$data7, _props$data8;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data7 = props.data) === null || _props$data7 === void 0 ? void 0 : _props$data7.displayLabel), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check me out\",\n      checked: props === null || props === void 0 ? void 0 : (_props$data8 = props.data) === null || _props$data8 === void 0 ? void 0 : _props$data8.value,\n      onChange: e => getValues(e.target.checked, props.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function TextArea(props) {\n    var _props$data9, _props$data10;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicTextArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data9 = props.data) === null || _props$data9 === void 0 ? void 0 : _props$data9.displayLabel), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      rows: \"3\",\n      col: \"3\",\n      id: \"comment\",\n      defaultValue: (props === null || props === void 0 ? void 0 : (_props$data10 = props.data) === null || _props$data10 === void 0 ? void 0 : _props$data10.value) || '',\n      onChange: e => getValues(e.target.value, props.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function DateArea(props) {\n    var _props$data11, _props$data12;\n\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, props === null || props === void 0 ? void 0 : (_props$data11 = props.data) === null || _props$data11 === void 0 ? void 0 : _props$data11.displayLabel), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"date\",\n      defaultValue: (props === null || props === void 0 ? void 0 : (_props$data12 = props.data) === null || _props$data12 === void 0 ? void 0 : _props$data12.value) || '',\n      onChange: e => getValues(e.target.value, props.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \" col-md-3 left-section py-2 px-4\",\n    style: {\n      height: '100vh',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \" Forms List\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }), formList.map((item, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    style: listCss,\n    onClick: () => getSelectedForm(item),\n    action: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, item))), /*#__PURE__*/React.createElement(Col, {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"Selected Form\"), showButton && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    size: \"sm\",\n    onClick: prevId ? updateRecord : saveRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }), \" \", prevId ? 'Update Record' : 'Create Record')), formrender && (formrender === null || formrender === void 0 ? void 0 : (_formrender$metaData = formrender.metaData) === null || _formrender$metaData === void 0 ? void 0 : _formrender$metaData.length) && (formrender === null || formrender === void 0 ? void 0 : formrender.metaData.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, item.type === 'email' && /*#__PURE__*/React.createElement(EmailTag, {\n    data: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 63\n    }\n  }), item.type === 'text' && /*#__PURE__*/React.createElement(TextTag, {\n    data: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 62\n    }\n  }), item.type === 'number' && /*#__PURE__*/React.createElement(NumberTag, {\n    data: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 64\n    }\n  }), item.type === 'checkbox' && /*#__PURE__*/React.createElement(CheckBox, {\n    data: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 66\n    }\n  }), item.type === 'textArea' && /*#__PURE__*/React.createElement(TextArea, {\n    data: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 66\n    }\n  }), item.type === 'date' && /*#__PURE__*/React.createElement(DateArea, {\n    data: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 62\n    }\n  })))))))));\n}\n\nexport default Forms;","map":{"version":3,"sources":["C:/Users/D E L L/NetMedsTask/src/components/Pages/Forms/Forms.js"],"names":["faPlusCircle","FontAwesomeIcon","React","useEffect","useState","Button","Col","Form","ListGroup","Row","useDispatch","useSelector","createRecord","updateRecords","Forms","props","listCss","cursor","listStyle","margin","padding","border","formList","setFormList","formrender","setFormRender","selected","setSelected","showButton","setShowButton","dispatch","forms","state","form","prevId","setPrevId","location","id","tempArr","Object","keys","undefined","tempVal","split","getSelectedForm","value","temp","JSON","parse","stringify","length","k","field","saveRecord","tempRecord","uniqueId","Date","now","toString","Math","random","substring","i","metaData","updateRecord","tempObj","getValues","event","index","EmailTag","data","displayLabel","e","target","TextTag","NumberTag","CheckBox","checked","TextArea","DateArea","height","overflowY","map","item","type"],"mappings":"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","sourcesContent":["import { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react'\nimport { Button, Col, Form, ListGroup, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createRecord, updateRecords } from '../../../Redux/rootForm/rootFormActions';\n\nfunction Forms(props) {\n    const listCss = { cursor: 'pointer', listStyle: 'none', margin: '3px', padding: '10px', border: '1px dashed #ddd' }\n    const [formList, setFormList] = useState([]);\n    var [formrender, setFormRender] = useState([]);\n    const [selected, setSelected] = useState('');\n    const [showButton, setShowButton] = useState(false);\n    const dispatch = useDispatch();\n    const forms = useSelector(state => state.form.forms);\n    const [prevId, setPrevId] = useState(props.location?.state?.id);\n\n    useEffect(() => {\n        let tempArr = Object.keys(forms);\n        setFormList(tempArr);\n        if (prevId && prevId !== undefined) {\n            let tempVal = prevId?.id?.split('_')[1];\n            getSelectedForm(tempVal)\n        } else if (prevId === undefined) {\n            setPrevId('');\n            setFormRender([]);\n        }\n    }, [forms])\n\n    function getSelectedForm(value) {\n        setShowButton(true);\n        let temp = JSON.parse(JSON.stringify(forms[value]));\n        if (prevId && temp && temp['metaData'].length) {\n            for (let k = 0; k < temp['metaData'].length; k++) {\n                let field = temp['metaData'][k]\n                field['value'] = prevId[field['label']]\n            }\n        }\n        setSelected(value);\n        setFormRender(temp);\n    }\n\n    function saveRecord() {\n        let tempRecord = {};\n        let uniqueId = Date.now().toString(36) + Math.random().toString(36).substring(2);\n        for (let i = 0; i < formrender.metaData.length; i++) {\n            let field = formrender.metaData[i];\n            tempRecord[field['label']] = field['value'];\n        }\n        tempRecord['templateType'] = selected;\n        tempRecord['id'] = uniqueId + '_' + selected;\n        dispatch(createRecord(tempRecord));\n        for (let i = 0; i < formrender.metaData.length; i++) {\n            formrender.metaData[i]['value'] = '';\n        }\n        setFormRender([]);\n        setShowButton(false);\n    }\n\n    function updateRecord() {\n        let tempObj = {};\n        for (let i = 0; i < formrender.metaData.length; i++) {\n            let field = formrender.metaData[i];\n            tempObj[field['label']] = field['value'];\n        }\n        tempObj['templateType'] = selected;\n        tempObj['id'] = prevId.id\n        dispatch(updateRecords(tempObj));\n        for (let i = 0; i < formrender.metaData.length; i++) {\n            formrender.metaData[i]['value'] = '';\n        }\n        setPrevId('');\n        setFormRender([]);\n        setShowButton(false);\n    }\n\n    function getValues(event, index) {\n        let value = event\n        formrender.metaData[index]['value'] = value\n    }\n\n    function EmailTag(props) {\n        return (\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" defaultValue={props?.data?.value || ''} onChange={(e) => getValues(e.target.value, props.index)} />\n                <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n            </Form.Group>\n        )\n    }\n    function TextTag(props) {\n        return (\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter Text\" defaultValue={props?.data?.value || ''} onChange={(e) => getValues(e.target.value, props.index)} />\n            </Form.Group>\n        )\n    }\n    function NumberTag(props) {\n        return (\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"12345....\" defaultValue={props?.data?.value || ''} onChange={(e) => getValues(e.target.value, props.index)} />\n            </Form.Group>\n        )\n    }\n    function CheckBox(props) {\n        return (\n            <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>\n                <Form.Check type=\"checkbox\" label=\"Check me out\" checked={props?.data?.value} onChange={(e) => getValues(e.target.checked, props.index)} />\n            </Form.Group>\n        )\n    }\n    function TextArea(props) {\n        return (\n            <Form.Group controlId=\"formBasicTextArea\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>\n                <textarea className=\"form-control\" rows=\"3\" col=\"3\" id=\"comment\" defaultValue={props?.data?.value || ''} onChange={(e) => getValues(e.target.value, props.index)} ></textarea>\n            </Form.Group>\n        )\n    }\n    function DateArea(props) {\n        return (\n            <Form.Group controlId=\"formBasicDate\">\n                <Form.Label>{props?.data?.displayLabel}</Form.Label>\n                <Form.Check type=\"date\" defaultValue={props?.data?.value || ''} onChange={(e) => getValues(e.target.value, props.index)} />\n            </Form.Group>\n        )\n    }\n\n    return (\n        <>\n            <div>\n                <Row className=\"m-0\">\n                    <Col  className=\" col-md-3 left-section py-2 px-4\" style={{ height: '100vh', overflowY: 'auto' }}>\n                        <h6 className=\"text-muted\"> Forms List</h6>\n                        <br />\n                        {formList.map((item, index) => (\n                            <ListGroup.Item key={index} style={listCss} onClick={() => getSelectedForm(item)} action>{item}</ListGroup.Item>\n                        ))}\n                    </Col>\n                    <Col  className=\"col-md-9\">\n                        <h6 className=\"text-muted\">Selected Form</h6>\n                        {showButton && <div className=\"float-right\">\n                            <Button variant=\"success\" size=\"sm\" onClick={prevId ? updateRecord : saveRecord}>\n                                <FontAwesomeIcon icon={faPlusCircle} /> {prevId ? 'Update Record' : 'Create Record'}\n                            </Button>\n                        </div>}\n                        {formrender && formrender?.metaData?.length && formrender?.metaData.map((item, index) => (\n                            <div key={index}>\n                                <Form>\n                                    {item.type === 'email' && <EmailTag data={item} index={index} />}\n                                    {item.type === 'text' && <TextTag data={item} index={index} />}\n                                    {item.type === 'number' && <NumberTag data={item} index={index} />}\n                                    {item.type === 'checkbox' && <CheckBox data={item} index={index} />}\n                                    {item.type === 'textArea' && <TextArea data={item} index={index} />}\n                                    {item.type === 'date' && <DateArea data={item} index={index} />}\n                                </Form>\n                            </div>\n                        ))}\n                    </Col>\n                </Row>\n            </div>\n        </>\n    )\n}\n\nexport default Forms\n"]},"metadata":{},"sourceType":"module"}